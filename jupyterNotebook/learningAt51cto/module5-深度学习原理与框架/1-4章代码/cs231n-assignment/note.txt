train为array中嵌套一个array
np.array索引可以用a[1,2]和a[1][2],但是普通数组只可以用a[1][2]
a.shape为(1000,)，代表第二维长度不确定，可能有的长度2，有的长度3，和(1000,1)不一样
np.sum之后shape变成(500,)指一维数组，要加一步转换成(500,1)变为二维数组，这两者不一样！！！！！
区别：[[1,2],[3,4,5]] shape (2,)
     [1,2] shape (2,)这个数组可用于广播
     [[1],[2]] shape (2,1)
     对于数组shape为(N,)的要小心，可能是一维数组，也可能是二维数组，如果确定是一维数组，可以reshape(-1, 1)变成二维数组。使用np.sum、np.max这种函数之后要小心，会变成一维数组，shape(N,)
(N,C)可以直接除以(N,1)（广播）
(N,1)构造：
[ [1],
  [2],
  [3]  ]
reshape就是转换成指定维度和维数，如果不想指定某一个维度的维数，可以用-1
运行代码时要注意，有时候后面的块对变量进行了修改，如果这时候还在调试前面的块，运行会产生错误！！！！！
python3: print() 不能print ''
python3没有cPickle
Pickle.load()的反序列化问题：datadict = pickle.load(f, encoding='iso-8859-1')
python2: xrange() ; python3: range()
python3: 1/2就是小数，无需强制转换
W*W为元素相乘，a.dot(b)为向量点乘，np.dot(a, b)也可以
list(a)a为np.array类型，可以将这个类型转化为list类型
a, b = X.shape元组的直接赋值
np.sum(W)不指定axis（即axis为None）则将所有元素加起来
np.mean()和.mean()一样
python3: a//b 才是整数整除 a/b可以浮点数
np.zeros((3, 2)) 注意需要两个括号
a * np.random.randn(...) + b 生成服从高斯分布的数，标准差a，期望b
python3没有dict.iteritems()（字典遍历），用dict.items()
python范围通常是前闭后开，如range(a,b)范围为[a,b)
np.zeros_like(a)
a = np.zeros(5) a[None, :, None, None]代表一个四维数组，冒号在不同的位置代表不同的含义
jupyter notebook对于括号不匹配问题报错不精准，要对报错的那一行附近两行都看一看
python3对于urllib库的使用不一样